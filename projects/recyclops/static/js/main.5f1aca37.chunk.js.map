{"version":3,"sources":["Recyclops.png","components/pages/HomePage.js","components/pages/Demo.js","components/pages/AboutPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","React","Component","constructor","props","super","this","state","render","_jsx","_Fragment","children","_jsxs","className","id","src","Logo","alt","Link","to","type","href","database","Demo","classifier","video","CANVAS","garbage","garbage_label","bin_label","tip_label","info_div","WIDTH","HEIGHT","classifyVideo","classify","gotResult","displayVideo","p5","push","imageMode","CENTER","translate","width","scale","image","pop","error","results","console","updateInfo","label","toLowerCase","html","data","bin","toUpperCase","tip","windowResized","max","windowWidth","min","resizeCanvas","x","y","windowHeight","height","position","style","Sketch","preload","ml5","imageClassifier","URL","log","setup","createCanvas","createCapture","VIDEO","hide","select","draw","background","mousePressed","mouseReleased","componentDidMount","AboutPage","App","Router","Routes","Route","path","element","exact","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f1aca37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Recyclops.38b3f3ef.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../Recyclops.png'\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <div className=\"homepage\">\r\n\r\n                <img id = \"logo\" src={Logo} alt=\"Logo\" />\r\n                <h1>Recyclops</h1>\r\n\r\n                <p>Every 1/4 items placed in a recycling bin are not recyclable. Nearly 75% of waste is recyclable, yet only 34% is recycled. Waste management is complex but Recyclops makes it easy by using an image classifier that helps people sort their trash into the correct bins.</p>\r\n                \r\n\r\n                <Link to=\"/demo\">\r\n                    <button type=\"button\" id=\"button-homepage\">Demo</button>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                    <button type=\"button\" id=\"button-homepage\">Learn More</button>\r\n                </Link>\r\n                <p>created by <a id=\"at\" href=\"https://github.com/tsaruggan\">@tsaruggan</a> and <a id=\"at\" href=\"https://github.com/karanvirheer\">@karanvirheer</a></p>\r\n                <p id=\"hashtags\">#MacHacks2021 #BestEnvironmentalHack</p>\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Sketch from \"react-p5\";\r\nimport ml5 from \"ml5\";\r\n\r\nconst database = {\r\n    \"aluminium foil\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"battery\": { \"bin\": \"hazardous waste\", \"tip\": \"Place in clear plastic bag and take this item to one of the city's drop-off depots.\" },\r\n    \"blister pack\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"bottle cap\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"broken glass\": { \"bin\": \"garbage\", \"tip\": \"Wrap sharp edges with thick or multi-layered material (e.g. newspaper, cardboard, plastic, fabric) before placing in the garbage.\" },\r\n    \"can\": { \"bin\": \"recycling\", \"tip\": \"Empty and rinse (if necessary and possible) this item before placing it in the recycling.\" },\r\n    \"cardboard\": { \"bin\": \"recycling\", \"tip\": \"Remove any plastic/foil liners or windows and place those in the garbage. Flatten and place in the recycling.\" },\r\n    \"carton\": { \"bin\": \"recycling\", \"tip\": \"Empty and rinse (if necessary and possible); remove and discard the straw in the garbage. Place the carton/box in your recycling without flattening it.\" },\r\n    \"cigarette\": { \"bin\": \"garbage\", \"tip\": \"Place this extinguished and cooled item in the garbage.\" },\r\n    \"cup\": { \"bin\": \"garbage\", \"tip\": \"If applicable, remove plastic lid and place in recycling.\" },\r\n    \"food waste\": { \"bin\": \"compost\", \"tip\": \"\" },\r\n    \"glass\": { \"bin\": \"recycling\", \"tip\": \"\" },\r\n    \"lid\": { \"bin\": \"recycling\", \"tip\": \"\" },\r\n    \"other plastic\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"paper\": { \"bin\": \"recycling\", \"tip\": \"If item is soiled with food/beverage, place it in the compost.\" },\r\n    \"paper bag\": { \"bin\": \"recycling\", \"tip\": \"If lined with wax or plastic (can be revealed by ripping slowly), then place this item in the garbage.\" },\r\n    \"plastic bag & wrapper\": { \"bin\": \"garbage\", \"tip\": \"If lined with wax or plastic (can be revealed by ripping slowly), then place this item in the garbage.\" },\r\n    \"plastic bottle\": { \"bin\": \"recycling\", \"tip\": \"Empty and rinse (if necessary and possible) this item before placing it with the lid on, into the recycling.\" },\r\n    \"plastic container\": { \"bin\": \"recycling\", \"tip\": \"Place any black and/or compostable plastic in the garbage. Place this empty and clean item in the recycling.\" },\r\n    \"plastic glooves\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"plastic utensils\": { \"bin\": \"recycling\", \"tip\": \"Place clean item in the recycling. Place all black and compostable plastic in the garbage.\" },\r\n    \"pop tab\": { \"bin\": \"recycling\", \"tip\": \"\" },\r\n    \"rope & strings\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"scrap metal\": { \"bin\": \"metal\", \"tip\": \"Please break down, bundle and/or tie where possible before setting the item out for curbside pick up.\" },\r\n    \"shoe\": { \"bin\": \"garbage\", \"tip\": \"Alternatively, consider donating reusable items to non-profit organizations.\" },\r\n    \"squeezable tube\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"straw\": { \"bin\": \"garbage\", \"tip\": \"\" },\r\n    \"styrofoam piece\": { \"bin\": \"recycling\", \"tip\": \"Any type of black foam is not accepted and should be placed in the garbage. Empty and rinse (if necessary and possible) this item before placing it in the recycling.\" },\r\n    \"unlabeled litter\": { \"bin\": \"garbage\", \"tip\": \"\" }\r\n};\r\n\r\nfunction Demo(props) {\r\n\r\n    let classifier;\r\n    // let URL = 'https://teachablemachine.withgoogle.com/models/voqdKd4Z3/';\r\n    let URL = 'https://teachablemachine.withgoogle.com/models/OGpAH453K/';\r\n    let video;\r\n    let WIDTH = 320;\r\n    let HEIGHT = 240;\r\n    let CANVAS;\r\n\r\n    let garbage;\r\n\r\n    let garbage_label;\r\n    let bin_label;\r\n    let tip_label;\r\n    let info_div;\r\n\r\n    const preload = (p5) => {\r\n        classifier = ml5.imageClassifier(URL + 'model.json', () => console.log(\"model loaded!\"));\r\n    }\r\n\r\n    const setup = (p5) => {\r\n        CANVAS = p5.createCanvas(WIDTH, HEIGHT);\r\n        CANVAS.style('display', 'block');\r\n\r\n        video = p5.createCapture(p5.VIDEO);\r\n        video.hide();\r\n\r\n        garbage_label = p5.select('#garbage-label')\r\n        garbage_label.style('display', 'inline');\r\n\r\n        bin_label = p5.select('#bin-label')\r\n        bin_label.style('display', 'inline');\r\n\r\n        tip_label = p5.select('#tip-label')\r\n        info_div = p5.select(\"#demo-info\")\r\n        // tip_label.style('display', 'block');\r\n\r\n        windowResized(p5)\r\n        classifyVideo();\r\n    }\r\n\r\n    const draw = (p5) => {\r\n        p5.background(255);\r\n        displayVideo(p5)\r\n    }\r\n\r\n    const classifyVideo = () => {\r\n        classifier.classify(video, gotResult);\r\n    }\r\n\r\n    const displayVideo = (p5) => {\r\n        p5.push()\r\n        p5.imageMode(p5.CENTER);\r\n        p5.translate(p5.width, 0);\r\n        p5.scale(-1, 1);\r\n        p5.image(video, WIDTH / 2, HEIGHT / 2);\r\n        p5.pop()\r\n    }\r\n\r\n    const gotResult = (error, results) => {\r\n        if (error) {\r\n            console.error(error);\r\n            return;\r\n        }\r\n        // garbage_label.center('horizontal')\r\n        updateInfo(results[0].label)\r\n        classifyVideo();\r\n    }\r\n\r\n    const updateInfo = (label) => {\r\n        garbage = label.toLowerCase();\r\n        garbage_label.html(garbage)\r\n\r\n        let data = database[garbage];\r\n        let bin = data['bin'].toUpperCase()\r\n        let tip = data['tip']\r\n        bin_label.html(bin)\r\n        tip_label.html(tip)\r\n    }\r\n\r\n    const windowResized = (p5) => {\r\n        WIDTH = p5.max(320, p5.windowWidth / 1.5)\r\n        WIDTH = p5.min(600, WIDTH)\r\n        HEIGHT = 3 * WIDTH / 4\r\n        p5.resizeCanvas(WIDTH, HEIGHT)\r\n        var x = (p5.windowWidth - p5.width) / 2;\r\n        var y = (p5.windowHeight - p5.height) / 2;\r\n        CANVAS.position(x, y);\r\n\r\n        // garbage_label.position(x, y + p5.min(HEIGHT, 500) + 10)\r\n        // bin_label.position(x, y + p5.min(HEIGHT, 500) + 25)\r\n\r\n        // ask_recyclops.position(x - 140 + WIDTH, y + p5.min(HEIGHT, 500) + 10)\r\n\r\n        // garbage_label.position(p5.windowWidth / 2 , y  + p5.min(HEIGHT, 500))\r\n        // garbage_label.center('horizontal')\r\n        info_div.style('width', WIDTH + 'px');\r\n        info_div.position(x, y + p5.min(HEIGHT, 500) + 10)\r\n        tip_label.style('width', WIDTH + 'px');\r\n        tip_label.position(x, y + p5.min(HEIGHT, 500) + 40)\r\n\r\n        p5.image(video, WIDTH / 2, HEIGHT / 2);\r\n    }\r\n\r\n    const mousePressed = (p5) => {\r\n\r\n    }\r\n\r\n    const mouseReleased = (p5) => {\r\n\r\n    }\r\n\r\n    const componentDidMount = (p5) => {\r\n\r\n    }\r\n\r\n    return (<>\r\n        <Sketch preload={preload} setup={setup} draw={draw} mousePressed={mousePressed} mouseReleased={mouseReleased} windowResized={windowResized} componentDidMount={componentDidMount} />\r\n        <div id=\"demo-info\">\r\n            <div id=\"garbage-label\"></div>\r\n            <div id=\"bin-label\"></div>\r\n        </div>\r\n        <div id=\"tip-label\"></div>\r\n\r\n    </>);\r\n\r\n}\r\n\r\nexport default Demo","import React from 'react';\r\n\r\nclass AboutPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <div className=\"about-page\">\r\n                <h1>Recyclops: An image classifier that helps people sort their trash into the correct bins.</h1>\r\n\r\n                <p>The 12th United Nations Sustainable Development Goal is to ensure responsible consumption and production by substantially reducing waste generation through prevention, reduction, recycling, and reuse. Despite consumers’ best intentions to responsibly dispose waste, recycling contamination and incorrect disposal of trash continue to present an obstacle to achieving this goal. Recycling contamination is when non-recyclable material or contaminants ends up in the recycling system which can force entire streams of perfectly recyclable material to go to landfills. On the flip side, high amounts of recyclable materials end up in garbage bins for various reasons such as misinformation or unclarity of signage. Trash sorting is complex and unique to municipalities so we a need a solution to confidently direct consumer trash to their correct bins.</p>\r\n\r\n                <p>We propose a feasible solution of developing a smartphone application that allows users to take a picture of the trash that they are unsure of how or where to dispose of and instantly direct them to the correct method of disposal. This app would operates similar to Google Lens where users can just point their camera at an article of trash, and it would tell them which trash bin to throw it in and even give them tips for separating and cleaning it before throwing it out. This feature is powered by an integrated integrated model that is trained to classify varying  trash articles, provide information on how it should be disposed of, and what precautions should be taken.</p>\r\n\r\n                <h2>Our Motivation</h2>\r\n                <p>Our motivation for this product goes beyond simply reducing the number of new landfills being created but also other environmental and socioeconomic sectors such as recovering raw materials, preserving energy, mitigating emissions and preventing pollution. For example, solid waste that could otherwise be treated such as batteries in landfills prove to leak toxic chemicals that pollute the local environment, water and soil. Additionally, recycling contamination can expose workers in recycling facilities to hazardous waste, vector-borne diseases and physical injuries. Recycling contamination also causes devaluation of recyclable material, which increases costs of services and even forces some recycling plants to close down; every percent decrease in contamination lowers recycling costs in Toronto by $1 million dollars per year. An app itself won’t directly solve all these issues, but the goal is to empower regular individuals and provide them a tool to make meaningful change towards sustainability.</p>\r\n\r\n                <h2>Technology</h2>\r\n                <p>Computer vision tasks like this are best suited by a Convolutional Neural Network (CNN) for their high accuracy; developing the architecture of a model that identifies articles of trash is a feasible task and the least of concern. Most of the effort is involved in training the model, specifically collecting and labelling training image data.</p>\r\n                <p>We utilized <a href=\"https://github.com/pedropro/TACO\">TACO</a>, an open source image dataset of waste found in the wild. It was used to obtain the images and annotations to train our AI in up to 1500 unique pictures. </p>\r\n                <p>Since the picture data wasn’t sorted into different folders based on its contents, an additional Python script was written to sort the images into a uniquely labelled folders based on the information found in the annotations. </p>\r\n                <p>We trained our AI through <a href =\"teachablemachine.withgoogle.com\">Teachable Machine </a> with the following configuration: 1000 Epochs, 64 Batch Size and 0.001 Learning Rate. There were 30 different unique classes, with their own images, that were used to get the AI familiar with correctly identifying the objects found in images or live feeds.</p>\r\n                <p>Finally, we built an intuitive user interface using React.js and HTML/CSS. The demo is deployed using Heroku and we hope to continue to add to the project in weeks to come. </p>\r\n                <p id=\"hashtags\">#MacHacks2021 #BestEnvironmentalHack</p>\r\n            </div>\r\n\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default AboutPage","import React from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\"; // Changed Switch to Routes\r\nimport \"./App.css\";\r\n\r\nimport HomePage from \"./components/pages/HomePage\";\r\nimport Demo from \"./components/pages/Demo\";\r\nimport AboutPage from \"./components/pages/AboutPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes>\r\n          {\" \"}\r\n          {/* Replace Switch with Routes */}\r\n          <Route path=\"/\" element={<HomePage />} exact />{\" \"}\r\n          {/* Change component to element */}\r\n          <Route path=\"/demo\" element={<Demo />} exact />\r\n          <Route path=\"/about\" element={<AboutPage />} exact />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}